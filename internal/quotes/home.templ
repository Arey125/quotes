package quotes

import (
	"fmt"
	"quotes/internal/ui"
	"quotes/internal/users"
)

templ home(c PageContext, quotes []Quote) {
	@ui.Base(c.getNavigation()) {
		<div class="flex items-center justify-between gap-4 pb-4 h-16">
			<h1 class="font-title text-xl md:max-lg:hidden">Quotes</h1>
			if c.getPermissions().CanWriteQuotes {
				<a class="btn btn-success" href="/quotes/create">
					Create
				</a>
			}
		</div>
		if c.getPermissions().CanReadQuotes {
			<label class="input mb-4">
				<svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
					<g
						stroke-linejoin="round"
						stroke-linecap="round"
						stroke-width="2.5"
						fill="none"
						stroke="currentColor"
					>
						<circle cx="11" cy="11" r="8"></circle>
						<path d="m21 21-4.3-4.3"></path>
					</g>
				</svg>
				<input
					type="search"
					class="grow"
					name="search"
					placeholder="Search"
					hx-trigger="input changed"
					hx-get="/quotes/search"
					hx-target="#quoteList"
				/>
			</label>
			<div id="quoteList">
				@quoteList(quotes, c.getUser())
			</div>
		}
	}
}

func canDeleteQuote(quote Quote, user *users.UserWithPermissions) bool {
	if user == nil {
		return false
	}
	if !user.Permissions.HasPermission(users.PermissonQuotesWrite) {
		return false
	}
	return quote.CreatedBy.Id == user.User.Id
}

templ quoteList(quotes []Quote, user *users.UserWithPermissions) {
	for _, quote := range quotes {
		<div class="card bg-base-100 mb-4">
			<div class="card-body">
				<h2 class="card-title mb-2">{ quote.Content }</h2>
				<div class="flex justify-between items-end">
					<ul class="flex flex-col gap-2">
						<li class="flex gap-1 opacity-70 items-center">
							@userIcon()
							<span>{ quote.CreatedBy.Name }</span>
						</li>
						<li class="flex gap-1 opacity-70 items-center">
							@dateIcon()
							<span>{ quote.CreatedAt.Format("02.01.2006 15:04:05") }</span>
						</li>
					</ul>
					if canDeleteQuote(quote, user) {
						<button
							hx-confirm="Are you sure you want to delete this quote?"
							data-confirm-title="Delete quote"
							hx-delete={ fmt.Sprintf("/quotes/%d", quote.Id) }
							hx-target="closest .card"
							hx-swap="outerHTML"
							class="btn btn-square btn-outline btn-error flex items-center justify-center"
						>
							@deleteIcon()
						</button>
					}
				</div>
			</div>
		</div>
	}
}

templ userIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="16"
		height="16"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-user-icon lucide-user"
	>
		<path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
		<circle cx="12" cy="7" r="4"></circle>
	</svg>
}

templ dateIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="16"
		height="16"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-calendar-icon lucide-calendar"
	>
		<path d="M8 2v4"></path>
		<path d="M16 2v4"></path>
		<rect width="18" height="18" x="3" y="4" rx="2"></rect>
		<path d="M3 10h18"></path>
	</svg>
}

templ deleteIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-trash2-icon lucide-trash-2"
	>
		<path d="M3 6h18"></path>
		<path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
		<path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
		<line x1="10" x2="10" y1="11" y2="17"></line>
		<line x1="14" x2="14" y1="11" y2="17"></line>
	</svg>
}
